trigger:
  batch: true
  branches:
    include:
    - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: SonaTypeCredentials
  - group: gpg key
  - name: CACHE
    value: $(HOME)/.cache
  - name: IVY_HOME
    value: $(Pipeline.Workspace)/.ivy2

steps:
  - task: CacheBeta@1
    displayName: Package resolver cache
    inputs:
      key: 'cache'
      path: '$(CACHE)'

  - task: CacheBeta@1
    displayName: Ivy resolver cache
    inputs:
      key: 'ivy_home'
      path: '$(IVY_HOME)'

  - task: DownloadSecureFile@1
    name: pubring
    inputs:
      secureFile: pubring.asc

  - task: DownloadSecureFile@1
    name: secring
    inputs:
      secureFile: secring.asc

  - task: Bash@3
    displayName: 'GPG'
    inputs:
      targetType: 'inline'
      script: |
        ls -la $(pubring.secureFilePath)
        ls -la $(secring.secureFilePath)
        mkdir ~/.gnupg
        chmod -R 700 ~/.gnupg

        # overrides tty to let gpg run on headless agents
        alias gpg=/home/vsts/work/1/s/gpg.sh

        gpg --import  $(pubring.secureFilePath)
        gpg --batch --import $(secring.secureFilePath)
        gpg --version
        gpg --list-keys
        gpg --list-secret-keys

        git checkout oss-release
        git config --global user.email "apollo@ing.com"
        git config --global user.name "baker release pipeline"

        echo $USERNAME | rev
        echo $PGP_PASSPHRASE | rev
        echo $(gpg key) | rev
        sbt -Divy.home=${IVY_HOME} -Dsbt.ivy.home=${IVY_HOME} "release with-defaults"

        rm -rf $(pubring.secureFilePath)
        rm -rf $(secring.secureFilePath)
        rm -rf ~/.gnupg

    env:
      # secrets must be extracted explicitly
      USERNAME: $(username)
      PASSWORD: $(password)
      # passphrase will be passed to sbt plugin from here
      PGP_PASSPHRASE: $(gpg key)
